/**
* Variables
*
*	- Breakpoints
*	- Font Stacks
*	- Grid Height
*	- Font Sizes
*	- Line Height
*	- Spaces
*	- Colors
*	- Transitions
*	- Borders
*	- Columns width
*/

/*
* Breakpoints
*
* Use em media queries to perform consistently across all browsers
* See: https://github.com/sass-mq/sass-mq/
* See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862
*/

$mq-breakpoints: (
	small-phone:	375px,
	phone:			601px,
	admin-bar:		782px,
	tablet:			900px,
	desktop:		1200px,
	large-screen:	1800px
);

$mq-media-type: screen;

/* Font Stacks */

$base-font-sans:	"Roboto", sans-serif !default;
$base-font-serif:	"Roboto Slab", serif !default;
$base-font-mono:	"Roboto Mono", monospace !default;

/*
* Grid Height (based on root font size)
*
* Define the ideal base font size and ideal line height for good redability on
* different screens.
* Smartphones: font-size: 16px and line-height: 20px.
* Set the grid height to 10px, as 1/2 of ideal line height (20px).
* From tablets: font-size: 18px and line-height: 27px.
* Set the grid height to 13.5px, as 1/2 of ideal line height (27px).
*/

$base-grid: (
	phone:			62.5%,    // 10px = (16px * 1.25)/2
	tablet:			84.375%   // 13.5px = (18px * 1.5)/2
);

/*
* Font Sizes
*
* Get consistent font size values from a modular scale build upon the base
* font-size and a preferred ratio.
*/

$base-font-sizes: (

	// See: https://www.modularscale.com/?16&px&1.125
	phone: (
		xxxl:		36.491px,
		xxl:		28.833px,
		xl:			20.25px,
		l:			18px,
		m:			16px,		// Base value - ratio: 1.125
		s:			14.22px,
		xs:			12.64px
	),

	// See: https://www.modularscale.com/?18&px&1.2
	tablet: (
		xxxl:		44.79px,
		xxl:		37.325px,
		xl:			25.92px,
		l:			21.6px,
		m:			18px,		// Base value - ratio: 1.2
		s:			15px,
		xs:			12.5px
	)
);

/*
* Line Height
*
* Common values for all breakpoints (multiple of grid height preserve vertical
* rhythm)
*/

$base-line-height: (
	xxxl:			4rem,
	xxl:			3rem,
	xl-break:		2.5rem,		// Break vertical rhythm
	xl:				2rem,
	l-break:		2.5rem,		// Break vertical rhythm
	l:				2rem,
	m:				2rem,
	s:				2rem,
	xs:				1.5rem,		// Break vertical rhythm

	// Drop-cap letter
	drop-cap-xxl:		11rem,
	drop-cap-xl:		6rem,
	drop-cap-xl-break:	7rem,
	drop-cap-l:			6rem,
	drop-cap-l-break:	7rem,
	drop-cap:			6rem,
	drop-cap-s:			4rem,
);

/*
* Spaces
*
* See: https://medium.com/eightshapes-llc/space-in-design-systems-188bcbae0d62
*/

$base-space: (
	xxl:			12rem,
	xl:				8rem,
	l:				6rem,
	m:				4rem,
	s:				2rem,
	xs:				1rem,
	xxs:			0.5rem,

	// Nested values
	stack: (
		xxl:		0 0 12rem 0,
		xl:			0 0 8rem 0,
		l:			0 0 6rem 0,
		m:			0 0 4rem 0,
		s:			0 0 2rem 0,
		xs:			0 0 1rem 0,
		xxs:		0 0 0.5rem 0
	),
	top: (
		xxl:		12rem 0 0 0,
		xl:			8rem 0 0 0,
		l:			6rem 0 0 0,
		m:			4rem 0 0 0,
		s:			2rem 0 0 0,
		xs:			1rem 0 0 0,
		xxs:		0.5rem 0 0 0
	),
	left: (
		xxl:		0 0 0 12rem,
		xl:			0 0 0 8rem,
		l:			0 0 0 6rem,
		m:			0 0 0 4rem,
		s:			0 0 0 2rem,
		xs:			0 0 0 1rem,
		xxs:		0 0 0 0.5rem
	),
	left-bottom: (
		xxl:		0 0 12rem 12rem,
		xl:			0 0 8rem 8rem,
		l:			0 0 6rem 6rem,
		m:			0 0 4rem 4rem,
		s:			0 0 2rem 2rem,
		xs:			0 0 1rem 1rem,
		xxs:		0 0 0.5rem 0.5rem
	),
	right: (
		xxl:		0 12rem 0 0,
		xl:			0 8rem 0 0,
		l:			0 6rem 0 0,
		m:			0 4rem 0 0,
		s:			0 2rem 0 0,
		xs:			0 1rem 0 0,
		xxs:		0 0.5rem 0 0
	),
	right-bottom: (
		xxl:		0 12rem 12rem 0,
		xl:			0 8rem 8rem 0,
		l:			0 6rem 6rem 0,
		m:			0 4rem 4rem 0,
		s:			0 2rem 2rem 0,
		xs:			0 1rem 1rem 0,
		xxs:		0 0.5rem 0.5rem 0
	),
	divider: (
		xxl:		12rem 0,
		xl:			8rem 0,
		l:			6rem 0,
		m:			4rem 0,
		s:			2rem 0,
		xs:			1rem 0,
		xxs:		0.5rem 0
	),
	column: (
		xxl:		0 12rem,
		xl:			0 8rem,
		l:			0 6rem,
		m:			0 4rem,
		s:			0 2rem,
		xs:			0 1rem,
		xxs:		0 0.5rem
	),
	inset-squish: (
		m:			3rem 4rem,
		s:			2rem 3rem,
		xs:			1rem 2rem,
		xxs:		0.5rem 1rem
	),
	inset-strech: (
		m:			4rem 3rem,
		s:			3rem 2rem,
		xs:			2rem 1rem,
		xxs:		1rem 0.5rem
	)
);

/* Colors */

$dark:				#1b1b1b;
$accent:			#d30c7b;
$info:				#0073e5;
$danger:			#ed254e;
$star:				#ffdf00;
$success:			#00a878;
$warning:			#f15025;

// Variations
$color-shade-amount: 15%;
$color-strong-shade-amount: 85%;
$color-trans-amount: 0.7;
$color-strong-trans-amount: 0.9;
$color-extrastrong-trans-amount: 0.95;

// Colors Map
$base-colors: (
	border:			darken(lighten($dark, $color-strong-shade-amount), $color-shade-amount),
	outline:		transparentize($dark, $color-trans-amount),
	shadow:			transparentize(darken($dark, $color-shade-amount), $color-strong-trans-amount),
	shadow-light:	transparentize(darken($dark, $color-shade-amount), $color-extrastrong-trans-amount),

	// Nested values
	dark: (
		base:		$dark,
		soft:		lighten($dark, $color-shade-amount),
		strong:		darken($dark, $color-shade-amount),
		trans:		transparentize($dark, $color-trans-amount)
	),
	light: (
		base:		lighten($dark, $color-strong-shade-amount),
		soft:		lighten(lighten($dark, $color-strong-shade-amount), $color-shade-amount),
		strong:		darken(lighten($dark, $color-strong-shade-amount), $color-shade-amount),
		trans:		transparentize(lighten($dark, $color-strong-shade-amount), $color-trans-amount)
	),
	accent: (
		base:		$accent,
		soft:		lighten($accent, $color-shade-amount),
		strong:		darken($accent, $color-shade-amount),
		trans:		transparentize($accent, $color-trans-amount)
	),
	info: (
		base:		$info,
		soft:		lighten($info, $color-shade-amount),
		strong:		darken($info, $color-shade-amount),
		trans:		transparentize($info, $color-trans-amount)
	),
	danger: (
		base:		$danger,
		soft:		lighten($danger, $color-shade-amount),
		strong:		darken($danger, $color-shade-amount),
		trans:		transparentize($danger, $color-trans-amount)
	),
	star: (
		base:		$star,
		soft:		lighten($star, $color-shade-amount),
		strong:		darken($star, $color-shade-amount),
		trans:		transparentize($star, $color-trans-amount)
	),
	success: (
		base:		$success,
		soft:		lighten($success, $color-shade-amount),
		strong:		darken($success, $color-shade-amount),
		trans:		transparentize($success, $color-trans-amount)
	),
	warning: (
		base:		$warning,
		soft:		lighten($warning, $color-shade-amount),
		strong:		darken($warning, $color-shade-amount),
		trans:		transparentize($warning, $color-trans-amount)
	)
);

/* Borders */

$base-border-radius: 3px;

/* Transitions */

$base-transition: 0.2s ease-in-out;

/* Columns Width */

$margin-left:		2.564102564102564%;
$one-half:			48.717948717948715%;
$one-third:			31.623931623931625%;
$one-fourth:		23.076923076923077%;
$one-fifth:			17.9487179487179488%;
$one-sixth:			14.52991452991453%;
$one-seventh:		12.087912087912088%;
$one-eighth:		10.256410256410255%;

$two-thirds:		65.81196581196582%;

$three-fourths: 	74.35897435897436%;

$two-fifths:		38.4615384615384616%;
$three-fifths:		58.9743589743589744%;
$four-fifths:		79.4871794871794872%;

$five-sixths:		82.90598290598291%;

$two-sevenths:		26.739926739926737%;
$three-sevenths:	41.39194139194139%;
$four-sevenths:		56.043956043956044%;
$five-sevenths:		70.69597069597069%;
$six-sevenths:		85.34798534798534%;

$three-eighths:		35.8974358974359%;
$five-eighths:		61.53846153846153%;
$seven-eighths:		74.35897435897435%;
