/**
* Functions
*
*	- Root Font Size
*	- Font Size
*	- Line Height
*	- Space
*	- Color
*/

/* Root Font Size
---------------------------------------------
* Retrieve values from $base-grid map defined in utility/variables.
* Usage: html { font-size: root-font-size(phone); }
--------------------------------------------- */

@function root-font-size($media, $size:null) {

	@if ($size != null) {
		// map inception
		@return map-get(map-get($base-grid, $media), $size);
	}

	@else {

		@return map-get($base-grid, $media);
	}
}

/* Font Size
---------------------------------------------
* Retrieve values from $font-size map defined in utility/variables.
* Usage: p { font-size: font-size(phone, m); }
--------------------------------------------- */

@function font-size($media, $size:null) {

	@if ($size != null) {
		// map inception
		@return map-get(map-get($base-font-sizes, $media), $size);
	}

	@else {

		@return map-get($base-font-sizes, $media);
	}
}

/* Line Height
---------------------------------------------
* Retrieve values from $base-line-height map defined in utility/variables.
* Usage: p { line-height: line-height(m); }
--------------------------------------------- */

@function line-height($size, $size-variant:null) {

	@if ($size-variant != null) {
		// map inception
		@return map-get(map-get($base-line-height, $size), $size-variant);
	}

	@else {

		@return map-get($base-line-height, $size);
	}
}

/* Space
---------------------------------------------
* Retrieve values from $base-space map defined in utility/variables.
* Usage: p { margin: space(m); }
* Usage with nested values: p { margin: space(stack, m); }
--------------------------------------------- */

// Retrieve values from $base-space map ie: space(stack, m)
@function space($size, $size-variant:null) {

	@if ($size-variant != null) {
		// map inception
		@return map-get(map-get($base-space, $size), $size-variant);
	}

	@else {

		@return map-get($base-space, $size);
	}
}

/* Color
---------------------------------------------
* Retrieve values from $base-colors map defined in utility/variables.
* Usage: div { border: 1px solid color(border); }
* Usage with nested values: a { color: color(primary, base); }
--------------------------------------------- */

@function color($color-name, $color-variant:null) {

	@if ($color-variant != null) {
		// map inception
		@return map-get(map-get($base-colors, $color-name), $color-variant);
	}

	@else {

		@return map-get($base-colors, $color-name);
	}
}
